{% comment %}

Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
and allow search engines to easily understand what the content is.

For more information on these Scheme.org tags, visit:
- http://schema.org/docs/gs.html

{% endcomment %}

{% comment %}
Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available  %}
{% assign sold_out = false %}
{% endif %}

<div itemscope itemtype="http://schema.org/Product" id="ProductSection" data-section-id="{{ section.id }}" data-section-type="product-template" data-zoom-enable="{{ section.settings.product_image_zoom_enable }}">

  <div class=grid>
    {% comment %}
    Product Image
    {% endcomment %}
    <div class="grid-item large--one-half text-center">
      <div class="product-single__photos" id="productPhoto">
        {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
        <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="productPhotoImg"{% if section.settings.product_image_zoom_enable %} data-zoom="{{ featured_image | img_url: '1024x1024' }}"{% endif %}>
      </div>

      {% comment %}
      Create thumbnails if we have more than one product image
      {% endcomment %}
      {% if product.images.size > 1 %}
      <ul class="product-single__thumbs grid-uniform" id="productThumbs">

        {% for image in product.images %}
        <li class="grid-item one-quarter">
          <a href="{{ image.src | img_url: 'large' }}" class="product-single__thumb">
            <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
          </a>
        </li>
        {% endfor %}

      </ul>
      {% endif %}
    </div>

    <div class="grid-item large--one-half product-single__header">
      <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
      <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

      {% if collection.handle %}
      <a href="{{ collection.url }}" class="collection-title text-center" item-prop="collection">{{ collection.title }}</a>
      {% endif %}

      <h1 itemprop="name" class="product-single__title{% if section.settings.product_vendor_enable %} wvendor{% endif %}">{{ product.title }}</h1>
      {% if section.settings.product_vendor_enable %}
      <p class="product-single__vendor">{{ product.vendor | link_to_vendor }}</p>
      {% endif %}
      <!--<hr class="hr--small">-->

      {% comment %}
      Optionally show the 'compare at' or original price of the product.
      {% endcomment %}

      <div class="product-single__price large--left">
        <div class="h2">
          {% if product.compare_at_price_max > product.price %}
          <span id="comparePriceA11y" class="visuallyhidden">{{ 'products.general.sale_price' | t }}</span>
          {% else %}
          <span id="priceA11y" class="visuallyhidden">{{ 'products.general.regular_price' | t }}</span>
          {% endif %}
          <span id="productPrice" {% if product.compare_at_price > product.price %} class="on-sale"{% endif %}>
            {{ product.price | money }}
          </span>

          {% if product.compare_at_price_max > product.price %}
          <span id="priceA11y" class="visuallyhidden">{{ 'products.general.regular_price' | t }}</span>
          <del id="comparePrice">{{ product.compare_at_price_max | money }}</del>
          {% endif %}
        </div>

        <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">

          {% comment %}
          Get first variant, or deep linked one
          {% endcomment %}
          {% assign variant = product.selected_or_first_available_variant %}

          <meta itemprop="priceCurrency" content="{{ shop.currency }}">
          <meta itemprop="price" content="{{ variant.price | divided_by: 100.00 }}">

          <link itemprop="availability" href="http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}">
          <hr class="hr--small">
          {% comment %}
          ID addToCartForm is a selector for the ajaxify cart plugin
          {% endcomment %}
          <form action="/cart/add" method="post" enctype="multipart/form-data" id="addToCartForm">

            {% comment %}
            Add product variants as a dropdown.
            - By default, each variant (or combination of variants) will display as its own <option>
            - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
            - Include option_selection.js (as seen at the bottom of this file)
            - This allows you to use JavaScript anytime the variant dropdown changes
            - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
            - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
            {% endcomment %}
            <div class="product-single__variants">

              {% if product.available and product.variants.size > 1 %}
                {% for option in product.options %}
                {%if settings.varient_style == 'swatch'%}
                  {% include 'swatch' with option %}
                  {%endif%}
                {% endfor %}
              {% endif %}

              <select name="id" id="productSelect" class="product-single__variants">
                {% for variant in product.variants %}
                {% if variant.available %}
                {% comment %}
                Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
                <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

                {% else %}
                <option disabled="disabled">
                  {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                </option>
                {% endif %}
                {% endfor %}
              </select>
            </div>

            <div class="grid--uniform product-single__addtocart">
              {% if section.settings.product_qty_enable %}
              {% unless sold_out %}<label>{{ 'products.product.quantity' | t }}</label>{% endunless %}
              <input type="number" id="quantity" name="quantity" value="1" min="1" class="quantity-selector">
              {% endif %}
              <button type="submit" name="add" id="addToCart" class="btn btn--large btn--full">
                <span id="addToCartText">{{ 'products.product.add_to_cart' | t }}</span>
              </button>
            </div>

          </form>

          {% if section.settings.share_enable %}
          {% include 'social-sharing' %}
          {% endif %}

        </div>

        <div class="product-single__desc rte" itemprop="description">
          {{ product.description }}
        </div>
      </div>
    </div>
  </div>

  <div class="grid product-single">
    <!--<div class="grid-item large--one-half text-center">
    <div class="product-single__photos" id="productPhoto">
    {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
    <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="productPhotoImg"{% if section.settings.product_image_zoom_enable %} data-zoom="{{ featured_image | img_url: '1024x1024' }}"{% endif %}>
  </div>

  {% comment %}
  Create thumbnails if we have more than one product image
  {% endcomment %}
  {% if product.images.size > 1 %}
  <ul class="product-single__thumbs grid-uniform" id="productThumbs">

  {% for image in product.images %}
  <li class="grid-item one-quarter">
  <a href="{{ image.src | img_url: 'large' }}" class="product-single__thumb">
  <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
</a>
</li>
{% endfor %}

</ul>
{% endif %}
</div>-->

<!--<div class="grid-item large--one-half">

<div itemprop="offers" itemscope itemtype="http://schema.org/Offer">

{% comment %}
Get first variant, or deep linked one
{% endcomment %}
{% assign variant = product.selected_or_first_available_variant %}

<meta itemprop="priceCurrency" content="{{ shop.currency }}">
<meta itemprop="price" content="{{ variant.price | divided_by: 100.00 }}">

<link itemprop="availability" href="http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}">

{% comment %}
ID addToCartForm is a selector for the ajaxify cart plugin
{% endcomment %}
<form action="/cart/add" method="post" enctype="multipart/form-data" id="addToCartForm">

{% comment %}
Add product variants as a dropdown.
- By default, each variant (or combination of variants) will display as its own <option>
- To separate these into multiple steps, which we suggest, use option_selection.js (see below)

You can leverage jQuery to add a callback on page load and each time the select element changes:
- Include option_selection.js (as seen at the bottom of this file)
- This allows you to use JavaScript anytime the variant dropdown changes
- This also separates out your variant options (ie. size, color, etc.) to separate select elements

For more information on products with multiple options, visit:
- http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
{% endcomment %}
<div class="product-single__variants">
<select name="id" id="productSelect" class="product-single__variants">
{% for variant in product.variants %}
{% if variant.available %}

{% comment %}
Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
{% endcomment %}
<option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

{% else %}
<option disabled="disabled">
{{ variant.title }} - {{ 'products.product.sold_out' | t }}
</option>
{% endif %}
{% endfor %}
</select>
</div>

<div class="grid--uniform product-single__addtocart">
{% if section.settings.product_qty_enable %}
{% unless sold_out %}<label>{{ 'products.product.quantity' | t }}</label>{% endunless %}
<input type="number" id="quantity" name="quantity" value="1" min="1" class="quantity-selector">
{% endif %}
<button type="submit" name="add" id="addToCart" class="btn btn--large btn--full">
<span id="addToCartText">{{ 'products.product.add_to_cart' | t }}</span>
</button>
</div>

</form>

</div>

<div class="product-single__desc rte" itemprop="description">
{{ product.description }}
</div>

{% if section.settings.share_enable %}
{% include 'social-sharing' %}
{% endif %}

</div>-->
</div>
{% if section.settings.related_products_enable %}
{% include 'related-products' %}
{% endif %}
</div>

{% unless product.empty? %}
<script type="application/json" id="ProductJson-{{ section.id }}">
{{ product | json }}
</script>
{% endunless %}

{% comment %}
To take advantage of a callback on the select dropdown, add option_selection.js
and customize the JS in timber.productPage as needed.

Currently, timber.productPage does the following:
- Hides your <select> tag from above
- Breaks out the product variants into separate product options, if more than one exists
- Generates a <select> tag for each product option
- Enables/disables elements based on variant availability

Callback notes:
- Keep the callback available to the global scope (window.selectCallback) so that advanced
addons can override it.
* E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}

{% schema %}
{
  "name": "Product page",
  "settings": [
  {
    "type": "checkbox",
    "id": "product_vendor_enable",
    "label": "Show product vendor"
  },
  {
    "type": "checkbox",
    "id": "product_image_zoom_enable",
    "label": "Enable image zoom"
  },
  {
    "type": "checkbox",
    "id": "related_products_enable",
    "label": "Show related products"
  },
  {
    "type": "checkbox",
    "id": "product_qty_enable",
    "label": "Show quantity selector"
  },
  {
    "type": "checkbox",
    "id": "share_enable",
    "label": "Enable product sharing"
  }
  ]
}
{% endschema %}
